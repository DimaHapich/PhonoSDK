Phono Cordova Plugin - Adding the power of Phono to mobile devices
===================================================================

The Phono Cordova plugin adds the power of Phono (http://phono.com) to mobile app using the PhoneGap application framework.

This plugins allows iOS applications built using Cordova to place High Definition (wideband) voice calls and instant messages using our simple unified API (http://phono.com/docs).

DISCLAIMER
  - Libraries included in this release are experimental so use AT YOUR OWN RISK
  - Please do not deploy these applications to the 'App Store' until we announce the final release
  
Enough of that, let's get started...

Pre-requisites:

An intel Mac - ideally running Lion
Xcode 4.2 or higher installed
Cordova 1.7 installed (We've included a copy of the Cordova-1.7.0.dmg in this directory or you can download it from the phonegap site
currently at http://phonegap.com/download )

Deploying Kitchen Sink
-----------------------

The Kitchen Sink is a demo Phono application that can run either in the browser or in Cordova. 

An iOS copy of the Kitchen Sink app can be found in sdk/samples/mobile
If you open KitchenSink.xcodeproj project in Xcode, and click Run you should have a working kitchen sink in your iOS simulator (or on a real device if you set that as the target).
(Note - the audio in the iOS simulator is pretty good, but the echo canceller on the real devices is significantly better)


Adding Phono support to your own existing Cordova project
-------------------------------------------------------
0. Open your Cordova project in XCode

1. Add the Phono Plugin
    - Right click on 'Plugins', "Add Files To..." 
    - Select the contents (three files) of the Plugins directory
    - Say yes to "Create groups for any added folders."
    
2. Link to libphono
    - From the "Build Phases" panel select "Link Binary With Libraries"
    - Click the "+" to  add the library that matches your architecture (i.e. 'i386' for emulator and 'arm' for iPhone/iPad devices). NOTE: Adding both is OK while developing.
    
3. Add the Security.framework
    - From the "Build Phases" panel select "Link Binary With Libraries"
    - Click the "+" and add scroll to add the "Security.framework" library set

4. Modify Cordova.plist (located in the Supporting Files folder of your project) to include the Phono plugin:

    <plist version="1.0">
       <dict>
          ...
          <key>Plugins</key>
          <dict>
               ...
               <key>Phono</key>
               <string>Phono</string>
               ...
          </dict>
          ...
       </dict>
    </plist>

5. add "app.phono.com" to the whitelist of ExternalHosts in Cordova.plist

6. Copy 'jquery.phono.js' to your Cordova 'www' directory and incude it in your app (e.g. index.html)

7. You need to ensure that Phono does not start until after Cordova is ready.
Here's some sample code:
    document.addEventListener("deviceready", onDeviceReady, false);

    // PhoneGap is loaded and it is now safe to make calls PhoneGap methods
    //
    function onDeviceReady() {
	$.getScript("kitchen-sink.js", function(data, textStatus, jqxhr) {
   		console.log('Loaded the kitchen-sink.js');
        });
    }



If this is your first Phono application, check out our awesome documentation here: http://phono.com/docs


For the curious, the PhonoSDK sourcecode is available on Github https://github.com/phono/PhonoSDK - we welcome contributions!

